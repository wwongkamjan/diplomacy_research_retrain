// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: diplomacy_proto/game.proto

#ifndef PROTOBUF_INCLUDED_diplomacy_5fproto_2fgame_2eproto
#define PROTOBUF_INCLUDED_diplomacy_5fproto_2fgame_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "diplomacy_proto/common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_diplomacy_5fproto_2fgame_2eproto 

namespace protobuf_diplomacy_5fproto_2fgame_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[21];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_diplomacy_5fproto_2fgame_2eproto
namespace diplomacy_proto {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class PhaseHistory;
class PhaseHistoryDefaultTypeInternal;
extern PhaseHistoryDefaultTypeInternal _PhaseHistory_default_instance_;
class PhaseHistory_OrdersEntry_DoNotUse;
class PhaseHistory_OrdersEntry_DoNotUseDefaultTypeInternal;
extern PhaseHistory_OrdersEntry_DoNotUseDefaultTypeInternal _PhaseHistory_OrdersEntry_DoNotUse_default_instance_;
class PhaseHistory_PolicyDetails;
class PhaseHistory_PolicyDetailsDefaultTypeInternal;
extern PhaseHistory_PolicyDetailsDefaultTypeInternal _PhaseHistory_PolicyDetails_default_instance_;
class PhaseHistory_PolicyEntry_DoNotUse;
class PhaseHistory_PolicyEntry_DoNotUseDefaultTypeInternal;
extern PhaseHistory_PolicyEntry_DoNotUseDefaultTypeInternal _PhaseHistory_PolicyEntry_DoNotUse_default_instance_;
class PhaseHistory_PossibleOrdersEntry_DoNotUse;
class PhaseHistory_PossibleOrdersEntry_DoNotUseDefaultTypeInternal;
extern PhaseHistory_PossibleOrdersEntry_DoNotUseDefaultTypeInternal _PhaseHistory_PossibleOrdersEntry_DoNotUse_default_instance_;
class PhaseHistory_ResultsEntry_DoNotUse;
class PhaseHistory_ResultsEntry_DoNotUseDefaultTypeInternal;
extern PhaseHistory_ResultsEntry_DoNotUseDefaultTypeInternal _PhaseHistory_ResultsEntry_DoNotUse_default_instance_;
class PhaseHistory_StateValueEntry_DoNotUse;
class PhaseHistory_StateValueEntry_DoNotUseDefaultTypeInternal;
extern PhaseHistory_StateValueEntry_DoNotUseDefaultTypeInternal _PhaseHistory_StateValueEntry_DoNotUse_default_instance_;
class SavedGame;
class SavedGameDefaultTypeInternal;
extern SavedGameDefaultTypeInternal _SavedGame_default_instance_;
class SavedGame_KeywordArgs;
class SavedGame_KeywordArgsDefaultTypeInternal;
extern SavedGame_KeywordArgsDefaultTypeInternal _SavedGame_KeywordArgs_default_instance_;
class SavedGame_KwargsEntry_DoNotUse;
class SavedGame_KwargsEntry_DoNotUseDefaultTypeInternal;
extern SavedGame_KwargsEntry_DoNotUseDefaultTypeInternal _SavedGame_KwargsEntry_DoNotUse_default_instance_;
class SavedGame_ReturnsEntry_DoNotUse;
class SavedGame_ReturnsEntry_DoNotUseDefaultTypeInternal;
extern SavedGame_ReturnsEntry_DoNotUseDefaultTypeInternal _SavedGame_ReturnsEntry_DoNotUse_default_instance_;
class SavedGame_RewardsEntry_DoNotUse;
class SavedGame_RewardsEntry_DoNotUseDefaultTypeInternal;
extern SavedGame_RewardsEntry_DoNotUseDefaultTypeInternal _SavedGame_RewardsEntry_DoNotUse_default_instance_;
class State;
class StateDefaultTypeInternal;
extern StateDefaultTypeInternal _State_default_instance_;
class State_Builds;
class State_BuildsDefaultTypeInternal;
extern State_BuildsDefaultTypeInternal _State_Builds_default_instance_;
class State_BuildsEntry_DoNotUse;
class State_BuildsEntry_DoNotUseDefaultTypeInternal;
extern State_BuildsEntry_DoNotUseDefaultTypeInternal _State_BuildsEntry_DoNotUse_default_instance_;
class State_CentersEntry_DoNotUse;
class State_CentersEntry_DoNotUseDefaultTypeInternal;
extern State_CentersEntry_DoNotUseDefaultTypeInternal _State_CentersEntry_DoNotUse_default_instance_;
class State_CivilDisorderEntry_DoNotUse;
class State_CivilDisorderEntry_DoNotUseDefaultTypeInternal;
extern State_CivilDisorderEntry_DoNotUseDefaultTypeInternal _State_CivilDisorderEntry_DoNotUse_default_instance_;
class State_HomesEntry_DoNotUse;
class State_HomesEntry_DoNotUseDefaultTypeInternal;
extern State_HomesEntry_DoNotUseDefaultTypeInternal _State_HomesEntry_DoNotUse_default_instance_;
class State_InfluenceEntry_DoNotUse;
class State_InfluenceEntry_DoNotUseDefaultTypeInternal;
extern State_InfluenceEntry_DoNotUseDefaultTypeInternal _State_InfluenceEntry_DoNotUse_default_instance_;
class State_UnitsEntry_DoNotUse;
class State_UnitsEntry_DoNotUseDefaultTypeInternal;
extern State_UnitsEntry_DoNotUseDefaultTypeInternal _State_UnitsEntry_DoNotUse_default_instance_;
}  // namespace diplomacy_proto
namespace google {
namespace protobuf {
template<> ::diplomacy_proto::Message* Arena::CreateMaybeMessage<::diplomacy_proto::Message>(Arena*);
template<> ::diplomacy_proto::PhaseHistory* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory>(Arena*);
template<> ::diplomacy_proto::PhaseHistory_OrdersEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory_OrdersEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::PhaseHistory_PolicyDetails* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory_PolicyDetails>(Arena*);
template<> ::diplomacy_proto::PhaseHistory_PolicyEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory_PolicyEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::PhaseHistory_PossibleOrdersEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory_PossibleOrdersEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::PhaseHistory_ResultsEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory_ResultsEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::PhaseHistory_StateValueEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::PhaseHistory_StateValueEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::SavedGame* Arena::CreateMaybeMessage<::diplomacy_proto::SavedGame>(Arena*);
template<> ::diplomacy_proto::SavedGame_KeywordArgs* Arena::CreateMaybeMessage<::diplomacy_proto::SavedGame_KeywordArgs>(Arena*);
template<> ::diplomacy_proto::SavedGame_KwargsEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::SavedGame_KwargsEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::SavedGame_ReturnsEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::SavedGame_ReturnsEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::SavedGame_RewardsEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::SavedGame_RewardsEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::State* Arena::CreateMaybeMessage<::diplomacy_proto::State>(Arena*);
template<> ::diplomacy_proto::State_Builds* Arena::CreateMaybeMessage<::diplomacy_proto::State_Builds>(Arena*);
template<> ::diplomacy_proto::State_BuildsEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::State_BuildsEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::State_CentersEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::State_CentersEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::State_CivilDisorderEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::State_CivilDisorderEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::State_HomesEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::State_HomesEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::State_InfluenceEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::State_InfluenceEntry_DoNotUse>(Arena*);
template<> ::diplomacy_proto::State_UnitsEntry_DoNotUse* Arena::CreateMaybeMessage<::diplomacy_proto::State_UnitsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace diplomacy_proto {

// ===================================================================

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Message* other);
  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  protected:
  explicit Message(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 tokens = 6 [packed = true];
  int tokens_size() const;
  void clear_tokens();
  static const int kTokensFieldNumber = 6;
  ::google::protobuf::uint32 tokens(int index) const;
  void set_tokens(int index, ::google::protobuf::uint32 value);
  void add_tokens(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      tokens() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_tokens();

  // string sender = 1;
  void clear_sender();
  static const int kSenderFieldNumber = 1;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_sender();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_sender(
      ::std::string* sender);

  // string recipient = 2;
  void clear_recipient();
  static const int kRecipientFieldNumber = 2;
  const ::std::string& recipient() const;
  void set_recipient(const ::std::string& value);
  #if LANG_CXX11
  void set_recipient(::std::string&& value);
  #endif
  void set_recipient(const char* value);
  void set_recipient(const char* value, size_t size);
  ::std::string* mutable_recipient();
  ::std::string* release_recipient();
  void set_allocated_recipient(::std::string* recipient);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_recipient();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_recipient(
      ::std::string* recipient);

  // string phase = 4;
  void clear_phase();
  static const int kPhaseFieldNumber = 4;
  const ::std::string& phase() const;
  void set_phase(const ::std::string& value);
  #if LANG_CXX11
  void set_phase(::std::string&& value);
  #endif
  void set_phase(const char* value);
  void set_phase(const char* value, size_t size);
  ::std::string* mutable_phase();
  ::std::string* release_phase();
  void set_allocated_phase(::std::string* phase);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_phase();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_phase(
      ::std::string* phase);

  // string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_message();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_message(
      ::std::string* message);

  // int64 time_sent = 3;
  void clear_time_sent();
  static const int kTimeSentFieldNumber = 3;
  ::google::protobuf::int64 time_sent() const;
  void set_time_sent(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:diplomacy_proto.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > tokens_;
  mutable int _tokens_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr recipient_;
  ::google::protobuf::internal::ArenaStringPtr phase_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int64 time_sent_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class State_Builds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.State.Builds) */ {
 public:
  State_Builds();
  virtual ~State_Builds();

  State_Builds(const State_Builds& from);

  inline State_Builds& operator=(const State_Builds& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  State_Builds(State_Builds&& from) noexcept
    : State_Builds() {
    *this = ::std::move(from);
  }

  inline State_Builds& operator=(State_Builds&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const State_Builds& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const State_Builds* internal_default_instance() {
    return reinterpret_cast<const State_Builds*>(
               &_State_Builds_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(State_Builds* other);
  void Swap(State_Builds* other);
  friend void swap(State_Builds& a, State_Builds& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline State_Builds* New() const final {
    return CreateMaybeMessage<State_Builds>(NULL);
  }

  State_Builds* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<State_Builds>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const State_Builds& from);
  void MergeFrom(const State_Builds& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(State_Builds* other);
  protected:
  explicit State_Builds(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string homes = 2;
  int homes_size() const;
  void clear_homes();
  static const int kHomesFieldNumber = 2;
  const ::std::string& homes(int index) const;
  ::std::string* mutable_homes(int index);
  void set_homes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_homes(int index, ::std::string&& value);
  #endif
  void set_homes(int index, const char* value);
  void set_homes(int index, const char* value, size_t size);
  ::std::string* add_homes();
  void add_homes(const ::std::string& value);
  #if LANG_CXX11
  void add_homes(::std::string&& value);
  #endif
  void add_homes(const char* value);
  void add_homes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& homes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_homes();

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:diplomacy_proto.State.Builds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> homes_;
  ::google::protobuf::int32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class State_UnitsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_UnitsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_UnitsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  State_UnitsEntry_DoNotUse();
  State_UnitsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_UnitsEntry_DoNotUse& other);
  static const State_UnitsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_UnitsEntry_DoNotUse*>(&_State_UnitsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State_CentersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_CentersEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_CentersEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  State_CentersEntry_DoNotUse();
  State_CentersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_CentersEntry_DoNotUse& other);
  static const State_CentersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_CentersEntry_DoNotUse*>(&_State_CentersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State_HomesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_HomesEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_HomesEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  State_HomesEntry_DoNotUse();
  State_HomesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_HomesEntry_DoNotUse& other);
  static const State_HomesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_HomesEntry_DoNotUse*>(&_State_HomesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State_InfluenceEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_InfluenceEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_InfluenceEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  State_InfluenceEntry_DoNotUse();
  State_InfluenceEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_InfluenceEntry_DoNotUse& other);
  static const State_InfluenceEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_InfluenceEntry_DoNotUse*>(&_State_InfluenceEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State_CivilDisorderEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_CivilDisorderEntry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_CivilDisorderEntry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  State_CivilDisorderEntry_DoNotUse();
  State_CivilDisorderEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_CivilDisorderEntry_DoNotUse& other);
  static const State_CivilDisorderEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_CivilDisorderEntry_DoNotUse*>(&_State_CivilDisorderEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State_BuildsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<State_BuildsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::State_Builds,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<State_BuildsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::State_Builds,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  State_BuildsEntry_DoNotUse();
  State_BuildsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const State_BuildsEntry_DoNotUse& other);
  static const State_BuildsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const State_BuildsEntry_DoNotUse*>(&_State_BuildsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.State) */ {
 public:
  State();
  virtual ~State();

  State(const State& from);

  inline State& operator=(const State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  State(State&& from) noexcept
    : State() {
    *this = ::std::move(from);
  }

  inline State& operator=(State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const State* internal_default_instance() {
    return reinterpret_cast<const State*>(
               &_State_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void UnsafeArenaSwap(State* other);
  void Swap(State* other);
  friend void swap(State& a, State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline State* New() const final {
    return CreateMaybeMessage<State>(NULL);
  }

  State* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<State>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const State& from);
  void MergeFrom(const State& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(State* other);
  protected:
  explicit State(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef State_Builds Builds;

  // accessors -------------------------------------------------------

  // repeated string rules = 4;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 4;
  const ::std::string& rules(int index) const;
  ::std::string* mutable_rules(int index);
  void set_rules(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_rules(int index, ::std::string&& value);
  #endif
  void set_rules(int index, const char* value);
  void set_rules(int index, const char* value, size_t size);
  ::std::string* add_rules();
  void add_rules(const ::std::string& value);
  #if LANG_CXX11
  void add_rules(::std::string&& value);
  #endif
  void add_rules(const char* value);
  void add_rules(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& rules() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rules();

  // map<string, .diplomacy_proto.StringList> units = 5;
  int units_size() const;
  void clear_units();
  static const int kUnitsFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      units() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_units();

  // map<string, .diplomacy_proto.StringList> centers = 6;
  int centers_size() const;
  void clear_centers();
  static const int kCentersFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      centers() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_centers();

  // map<string, .diplomacy_proto.StringList> homes = 7;
  int homes_size() const;
  void clear_homes();
  static const int kHomesFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      homes() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_homes();

  // map<string, .diplomacy_proto.StringList> influence = 8;
  int influence_size() const;
  void clear_influence();
  static const int kInfluenceFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      influence() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_influence();

  // map<string, int32> civil_disorder = 9;
  int civil_disorder_size() const;
  void clear_civil_disorder();
  static const int kCivilDisorderFieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      civil_disorder() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_civil_disorder();

  // map<string, .diplomacy_proto.State.Builds> builds = 10;
  int builds_size() const;
  void clear_builds();
  static const int kBuildsFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::State_Builds >&
      builds() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::State_Builds >*
      mutable_builds();

  // repeated uint32 board_state = 12 [packed = true];
  int board_state_size() const;
  void clear_board_state();
  static const int kBoardStateFieldNumber = 12;
  ::google::protobuf::uint32 board_state(int index) const;
  void set_board_state(int index, ::google::protobuf::uint32 value);
  void add_board_state(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      board_state() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_board_state();

  // string game_id = 1;
  void clear_game_id();
  static const int kGameIdFieldNumber = 1;
  const ::std::string& game_id() const;
  void set_game_id(const ::std::string& value);
  #if LANG_CXX11
  void set_game_id(::std::string&& value);
  #endif
  void set_game_id(const char* value);
  void set_game_id(const char* value, size_t size);
  ::std::string* mutable_game_id();
  ::std::string* release_game_id();
  void set_allocated_game_id(::std::string* game_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_game_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_game_id(
      ::std::string* game_id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // string map = 3;
  void clear_map();
  static const int kMapFieldNumber = 3;
  const ::std::string& map() const;
  void set_map(const ::std::string& value);
  #if LANG_CXX11
  void set_map(::std::string&& value);
  #endif
  void set_map(const char* value);
  void set_map(const char* value, size_t size);
  ::std::string* mutable_map();
  ::std::string* release_map();
  void set_allocated_map(::std::string* map);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_map();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_map(
      ::std::string* map);

  // string note = 11;
  void clear_note();
  static const int kNoteFieldNumber = 11;
  const ::std::string& note() const;
  void set_note(const ::std::string& value);
  #if LANG_CXX11
  void set_note(::std::string&& value);
  #endif
  void set_note(const char* value);
  void set_note(const char* value, size_t size);
  ::std::string* mutable_note();
  ::std::string* release_note();
  void set_allocated_note(::std::string* note);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_note();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_note(
      ::std::string* note);

  // string zobrist_hash = 13;
  void clear_zobrist_hash();
  static const int kZobristHashFieldNumber = 13;
  const ::std::string& zobrist_hash() const;
  void set_zobrist_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_zobrist_hash(::std::string&& value);
  #endif
  void set_zobrist_hash(const char* value);
  void set_zobrist_hash(const char* value, size_t size);
  ::std::string* mutable_zobrist_hash();
  ::std::string* release_zobrist_hash();
  void set_allocated_zobrist_hash(::std::string* zobrist_hash);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_zobrist_hash();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_zobrist_hash(
      ::std::string* zobrist_hash);

  // @@protoc_insertion_point(class_scope:diplomacy_proto.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rules_;
  ::google::protobuf::internal::MapField<
      State_UnitsEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > units_;
  ::google::protobuf::internal::MapField<
      State_CentersEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > centers_;
  ::google::protobuf::internal::MapField<
      State_HomesEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > homes_;
  ::google::protobuf::internal::MapField<
      State_InfluenceEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > influence_;
  ::google::protobuf::internal::MapField<
      State_CivilDisorderEntry_DoNotUse,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > civil_disorder_;
  ::google::protobuf::internal::MapField<
      State_BuildsEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::State_Builds,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > builds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > board_state_;
  mutable int _board_state_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr game_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr map_;
  ::google::protobuf::internal::ArenaStringPtr note_;
  ::google::protobuf::internal::ArenaStringPtr zobrist_hash_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhaseHistory_PolicyDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.PhaseHistory.PolicyDetails) */ {
 public:
  PhaseHistory_PolicyDetails();
  virtual ~PhaseHistory_PolicyDetails();

  PhaseHistory_PolicyDetails(const PhaseHistory_PolicyDetails& from);

  inline PhaseHistory_PolicyDetails& operator=(const PhaseHistory_PolicyDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhaseHistory_PolicyDetails(PhaseHistory_PolicyDetails&& from) noexcept
    : PhaseHistory_PolicyDetails() {
    *this = ::std::move(from);
  }

  inline PhaseHistory_PolicyDetails& operator=(PhaseHistory_PolicyDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseHistory_PolicyDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhaseHistory_PolicyDetails* internal_default_instance() {
    return reinterpret_cast<const PhaseHistory_PolicyDetails*>(
               &_PhaseHistory_PolicyDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void UnsafeArenaSwap(PhaseHistory_PolicyDetails* other);
  void Swap(PhaseHistory_PolicyDetails* other);
  friend void swap(PhaseHistory_PolicyDetails& a, PhaseHistory_PolicyDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhaseHistory_PolicyDetails* New() const final {
    return CreateMaybeMessage<PhaseHistory_PolicyDetails>(NULL);
  }

  PhaseHistory_PolicyDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PhaseHistory_PolicyDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PhaseHistory_PolicyDetails& from);
  void MergeFrom(const PhaseHistory_PolicyDetails& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhaseHistory_PolicyDetails* other);
  protected:
  explicit PhaseHistory_PolicyDetails(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string locs = 1;
  int locs_size() const;
  void clear_locs();
  static const int kLocsFieldNumber = 1;
  const ::std::string& locs(int index) const;
  ::std::string* mutable_locs(int index);
  void set_locs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_locs(int index, ::std::string&& value);
  #endif
  void set_locs(int index, const char* value);
  void set_locs(int index, const char* value, size_t size);
  ::std::string* add_locs();
  void add_locs(const ::std::string& value);
  #if LANG_CXX11
  void add_locs(::std::string&& value);
  #endif
  void add_locs(const char* value);
  void add_locs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& locs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_locs();

  // repeated int32 tokens = 2;
  int tokens_size() const;
  void clear_tokens();
  static const int kTokensFieldNumber = 2;
  ::google::protobuf::int32 tokens(int index) const;
  void set_tokens(int index, ::google::protobuf::int32 value);
  void add_tokens(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      tokens() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_tokens();

  // repeated float log_probs = 3 [packed = true];
  int log_probs_size() const;
  void clear_log_probs();
  static const int kLogProbsFieldNumber = 3;
  float log_probs(int index) const;
  void set_log_probs(int index, float value);
  void add_log_probs(float value);
  const ::google::protobuf::RepeatedField< float >&
      log_probs() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_log_probs();

  // bool draw_action = 4;
  void clear_draw_action();
  static const int kDrawActionFieldNumber = 4;
  bool draw_action() const;
  void set_draw_action(bool value);

  // float draw_prob = 5;
  void clear_draw_prob();
  static const int kDrawProbFieldNumber = 5;
  float draw_prob() const;
  void set_draw_prob(float value);

  // @@protoc_insertion_point(class_scope:diplomacy_proto.PhaseHistory.PolicyDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> locs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > tokens_;
  mutable int _tokens_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > log_probs_;
  mutable int _log_probs_cached_byte_size_;
  bool draw_action_;
  float draw_prob_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhaseHistory_OrdersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PhaseHistory_OrdersEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PhaseHistory_OrdersEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PhaseHistory_OrdersEntry_DoNotUse();
  PhaseHistory_OrdersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PhaseHistory_OrdersEntry_DoNotUse& other);
  static const PhaseHistory_OrdersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PhaseHistory_OrdersEntry_DoNotUse*>(&_PhaseHistory_OrdersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PhaseHistory_ResultsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PhaseHistory_ResultsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PhaseHistory_ResultsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PhaseHistory_ResultsEntry_DoNotUse();
  PhaseHistory_ResultsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PhaseHistory_ResultsEntry_DoNotUse& other);
  static const PhaseHistory_ResultsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PhaseHistory_ResultsEntry_DoNotUse*>(&_PhaseHistory_ResultsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PhaseHistory_PolicyEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PhaseHistory_PolicyEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PhaseHistory_PolicyEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PhaseHistory_PolicyEntry_DoNotUse();
  PhaseHistory_PolicyEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PhaseHistory_PolicyEntry_DoNotUse& other);
  static const PhaseHistory_PolicyEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PhaseHistory_PolicyEntry_DoNotUse*>(&_PhaseHistory_PolicyEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PhaseHistory_StateValueEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PhaseHistory_StateValueEntry_DoNotUse, 
    ::std::string, float,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PhaseHistory_StateValueEntry_DoNotUse, 
    ::std::string, float,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
    0 > SuperType;
  PhaseHistory_StateValueEntry_DoNotUse();
  PhaseHistory_StateValueEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PhaseHistory_StateValueEntry_DoNotUse& other);
  static const PhaseHistory_StateValueEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PhaseHistory_StateValueEntry_DoNotUse*>(&_PhaseHistory_StateValueEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PhaseHistory_PossibleOrdersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PhaseHistory_PossibleOrdersEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PhaseHistory_PossibleOrdersEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::StringList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  PhaseHistory_PossibleOrdersEntry_DoNotUse();
  PhaseHistory_PossibleOrdersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PhaseHistory_PossibleOrdersEntry_DoNotUse& other);
  static const PhaseHistory_PossibleOrdersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PhaseHistory_PossibleOrdersEntry_DoNotUse*>(&_PhaseHistory_PossibleOrdersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PhaseHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.PhaseHistory) */ {
 public:
  PhaseHistory();
  virtual ~PhaseHistory();

  PhaseHistory(const PhaseHistory& from);

  inline PhaseHistory& operator=(const PhaseHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhaseHistory(PhaseHistory&& from) noexcept
    : PhaseHistory() {
    *this = ::std::move(from);
  }

  inline PhaseHistory& operator=(PhaseHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseHistory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhaseHistory* internal_default_instance() {
    return reinterpret_cast<const PhaseHistory*>(
               &_PhaseHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void UnsafeArenaSwap(PhaseHistory* other);
  void Swap(PhaseHistory* other);
  friend void swap(PhaseHistory& a, PhaseHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhaseHistory* New() const final {
    return CreateMaybeMessage<PhaseHistory>(NULL);
  }

  PhaseHistory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PhaseHistory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PhaseHistory& from);
  void MergeFrom(const PhaseHistory& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhaseHistory* other);
  protected:
  explicit PhaseHistory(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PhaseHistory_PolicyDetails PolicyDetails;

  // accessors -------------------------------------------------------

  // map<string, .diplomacy_proto.StringList> orders = 3;
  int orders_size() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      orders() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_orders();

  // map<string, .diplomacy_proto.StringList> results = 4;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      results() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_results();

  // map<string, .diplomacy_proto.PhaseHistory.PolicyDetails> policy = 6;
  int policy_size() const;
  void clear_policy();
  static const int kPolicyFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails >&
      policy() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails >*
      mutable_policy();

  // map<string, .diplomacy_proto.StringList> possible_orders = 7;
  int possible_orders_size() const;
  void clear_possible_orders();
  static const int kPossibleOrdersFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
      possible_orders() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
      mutable_possible_orders();

  // repeated uint32 prev_orders_state = 8 [packed = true];
  int prev_orders_state_size() const;
  void clear_prev_orders_state();
  static const int kPrevOrdersStateFieldNumber = 8;
  ::google::protobuf::uint32 prev_orders_state(int index) const;
  void set_prev_orders_state(int index, ::google::protobuf::uint32 value);
  void add_prev_orders_state(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      prev_orders_state() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_prev_orders_state();

  // map<string, float> state_value = 9;
  int state_value_size() const;
  void clear_state_value();
  static const int kStateValueFieldNumber = 9;
  const ::google::protobuf::Map< ::std::string, float >&
      state_value() const;
  ::google::protobuf::Map< ::std::string, float >*
      mutable_state_value();

  // repeated uint32 future_orders_state = 10 [packed = true];
  int future_orders_state_size() const;
  void clear_future_orders_state();
  static const int kFutureOrdersStateFieldNumber = 10;
  ::google::protobuf::uint32 future_orders_state(int index) const;
  void set_future_orders_state(int index, ::google::protobuf::uint32 value);
  void add_future_orders_state(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      future_orders_state() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_future_orders_state();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // .diplomacy_proto.State state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::diplomacy_proto::State& _internal_state() const;
  public:
  const ::diplomacy_proto::State& state() const;
  ::diplomacy_proto::State* release_state();
  ::diplomacy_proto::State* mutable_state();
  void set_allocated_state(::diplomacy_proto::State* state);
  void unsafe_arena_set_allocated_state(
      ::diplomacy_proto::State* state);
  ::diplomacy_proto::State* unsafe_arena_release_state();

  // @@protoc_insertion_point(class_scope:diplomacy_proto.PhaseHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::MapField<
      PhaseHistory_OrdersEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > orders_;
  ::google::protobuf::internal::MapField<
      PhaseHistory_ResultsEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > results_;
  ::google::protobuf::internal::MapField<
      PhaseHistory_PolicyEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > policy_;
  ::google::protobuf::internal::MapField<
      PhaseHistory_PossibleOrdersEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::StringList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > possible_orders_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > prev_orders_state_;
  mutable int _prev_orders_state_cached_byte_size_;
  ::google::protobuf::internal::MapField<
      PhaseHistory_StateValueEntry_DoNotUse,
      ::std::string, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > state_value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > future_orders_state_;
  mutable int _future_orders_state_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::diplomacy_proto::State* state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedGame_KeywordArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.SavedGame.KeywordArgs) */ {
 public:
  SavedGame_KeywordArgs();
  virtual ~SavedGame_KeywordArgs();

  SavedGame_KeywordArgs(const SavedGame_KeywordArgs& from);

  inline SavedGame_KeywordArgs& operator=(const SavedGame_KeywordArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedGame_KeywordArgs(SavedGame_KeywordArgs&& from) noexcept
    : SavedGame_KeywordArgs() {
    *this = ::std::move(from);
  }

  inline SavedGame_KeywordArgs& operator=(SavedGame_KeywordArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedGame_KeywordArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedGame_KeywordArgs* internal_default_instance() {
    return reinterpret_cast<const SavedGame_KeywordArgs*>(
               &_SavedGame_KeywordArgs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void UnsafeArenaSwap(SavedGame_KeywordArgs* other);
  void Swap(SavedGame_KeywordArgs* other);
  friend void swap(SavedGame_KeywordArgs& a, SavedGame_KeywordArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedGame_KeywordArgs* New() const final {
    return CreateMaybeMessage<SavedGame_KeywordArgs>(NULL);
  }

  SavedGame_KeywordArgs* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedGame_KeywordArgs>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedGame_KeywordArgs& from);
  void MergeFrom(const SavedGame_KeywordArgs& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedGame_KeywordArgs* other);
  protected:
  explicit SavedGame_KeywordArgs(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 player_seed = 1;
  void clear_player_seed();
  static const int kPlayerSeedFieldNumber = 1;
  ::google::protobuf::int32 player_seed() const;
  void set_player_seed(::google::protobuf::int32 value);

  // float noise = 2;
  void clear_noise();
  static const int kNoiseFieldNumber = 2;
  float noise() const;
  void set_noise(float value);

  // float temperature = 3;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 3;
  float temperature() const;
  void set_temperature(float value);

  // float dropout_rate = 5;
  void clear_dropout_rate();
  static const int kDropoutRateFieldNumber = 5;
  float dropout_rate() const;
  void set_dropout_rate(float value);

  // @@protoc_insertion_point(class_scope:diplomacy_proto.SavedGame.KeywordArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int32 player_seed_;
  float noise_;
  float temperature_;
  float dropout_rate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SavedGame_KwargsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SavedGame_KwargsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SavedGame_KwargsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SavedGame_KwargsEntry_DoNotUse();
  SavedGame_KwargsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SavedGame_KwargsEntry_DoNotUse& other);
  static const SavedGame_KwargsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SavedGame_KwargsEntry_DoNotUse*>(&_SavedGame_KwargsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SavedGame_RewardsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SavedGame_RewardsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::FloatList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SavedGame_RewardsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::FloatList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SavedGame_RewardsEntry_DoNotUse();
  SavedGame_RewardsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SavedGame_RewardsEntry_DoNotUse& other);
  static const SavedGame_RewardsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SavedGame_RewardsEntry_DoNotUse*>(&_SavedGame_RewardsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SavedGame_ReturnsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SavedGame_ReturnsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::FloatList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SavedGame_ReturnsEntry_DoNotUse, 
    ::std::string, ::diplomacy_proto::FloatList,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SavedGame_ReturnsEntry_DoNotUse();
  SavedGame_ReturnsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SavedGame_ReturnsEntry_DoNotUse& other);
  static const SavedGame_ReturnsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SavedGame_ReturnsEntry_DoNotUse*>(&_SavedGame_ReturnsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SavedGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:diplomacy_proto.SavedGame) */ {
 public:
  SavedGame();
  virtual ~SavedGame();

  SavedGame(const SavedGame& from);

  inline SavedGame& operator=(const SavedGame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SavedGame(SavedGame&& from) noexcept
    : SavedGame() {
    *this = ::std::move(from);
  }

  inline SavedGame& operator=(SavedGame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const SavedGame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SavedGame* internal_default_instance() {
    return reinterpret_cast<const SavedGame*>(
               &_SavedGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void UnsafeArenaSwap(SavedGame* other);
  void Swap(SavedGame* other);
  friend void swap(SavedGame& a, SavedGame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SavedGame* New() const final {
    return CreateMaybeMessage<SavedGame>(NULL);
  }

  SavedGame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SavedGame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SavedGame& from);
  void MergeFrom(const SavedGame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SavedGame* other);
  protected:
  explicit SavedGame(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SavedGame_KeywordArgs KeywordArgs;

  // accessors -------------------------------------------------------

  // repeated string rules = 3;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 3;
  const ::std::string& rules(int index) const;
  ::std::string* mutable_rules(int index);
  void set_rules(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_rules(int index, ::std::string&& value);
  #endif
  void set_rules(int index, const char* value);
  void set_rules(int index, const char* value, size_t size);
  ::std::string* add_rules();
  void add_rules(const ::std::string& value);
  #if LANG_CXX11
  void add_rules(::std::string&& value);
  #endif
  void add_rules(const char* value);
  void add_rules(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& rules() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rules();

  // repeated .diplomacy_proto.PhaseHistory phases = 4;
  int phases_size() const;
  void clear_phases();
  static const int kPhasesFieldNumber = 4;
  ::diplomacy_proto::PhaseHistory* mutable_phases(int index);
  ::google::protobuf::RepeatedPtrField< ::diplomacy_proto::PhaseHistory >*
      mutable_phases();
  const ::diplomacy_proto::PhaseHistory& phases(int index) const;
  ::diplomacy_proto::PhaseHistory* add_phases();
  const ::google::protobuf::RepeatedPtrField< ::diplomacy_proto::PhaseHistory >&
      phases() const;

  // repeated string assigned_powers = 5;
  int assigned_powers_size() const;
  void clear_assigned_powers();
  static const int kAssignedPowersFieldNumber = 5;
  const ::std::string& assigned_powers(int index) const;
  ::std::string* mutable_assigned_powers(int index);
  void set_assigned_powers(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_assigned_powers(int index, ::std::string&& value);
  #endif
  void set_assigned_powers(int index, const char* value);
  void set_assigned_powers(int index, const char* value, size_t size);
  ::std::string* add_assigned_powers();
  void add_assigned_powers(const ::std::string& value);
  #if LANG_CXX11
  void add_assigned_powers(::std::string&& value);
  #endif
  void add_assigned_powers(const char* value);
  void add_assigned_powers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& assigned_powers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_assigned_powers();

  // map<string, .diplomacy_proto.FloatList> rewards = 8;
  int rewards_size() const;
  void clear_rewards();
  static const int kRewardsFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >&
      rewards() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >*
      mutable_rewards();

  // map<string, .diplomacy_proto.SavedGame.KeywordArgs> kwargs = 10;
  int kwargs_size() const;
  void clear_kwargs();
  static const int kKwargsFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs >&
      kwargs() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs >*
      mutable_kwargs();

  // repeated string players = 11;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 11;
  const ::std::string& players(int index) const;
  ::std::string* mutable_players(int index);
  void set_players(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_players(int index, ::std::string&& value);
  #endif
  void set_players(int index, const char* value);
  void set_players(int index, const char* value, size_t size);
  ::std::string* add_players();
  void add_players(const ::std::string& value);
  #if LANG_CXX11
  void add_players(::std::string&& value);
  #endif
  void add_players(const char* value);
  void add_players(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& players() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_players();

  // map<string, .diplomacy_proto.FloatList> returns = 13;
  int returns_size() const;
  void clear_returns();
  static const int kReturnsFieldNumber = 13;
  const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >&
      returns() const;
  ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >*
      mutable_returns();

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      ::std::string* id);

  // string map = 2;
  void clear_map();
  static const int kMapFieldNumber = 2;
  const ::std::string& map() const;
  void set_map(const ::std::string& value);
  #if LANG_CXX11
  void set_map(::std::string&& value);
  #endif
  void set_map(const char* value);
  void set_map(const char* value, size_t size);
  ::std::string* mutable_map();
  ::std::string* release_map();
  void set_allocated_map(::std::string* map);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_map();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_map(
      ::std::string* map);

  // string done_reason = 6;
  void clear_done_reason();
  static const int kDoneReasonFieldNumber = 6;
  const ::std::string& done_reason() const;
  void set_done_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_done_reason(::std::string&& value);
  #endif
  void set_done_reason(const char* value);
  void set_done_reason(const char* value, size_t size);
  ::std::string* mutable_done_reason();
  ::std::string* release_done_reason();
  void set_allocated_done_reason(::std::string* done_reason);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_done_reason();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_done_reason(
      ::std::string* done_reason);

  // string reward_fn = 7;
  void clear_reward_fn();
  static const int kRewardFnFieldNumber = 7;
  const ::std::string& reward_fn() const;
  void set_reward_fn(const ::std::string& value);
  #if LANG_CXX11
  void set_reward_fn(::std::string&& value);
  #endif
  void set_reward_fn(const char* value);
  void set_reward_fn(const char* value, size_t size);
  ::std::string* mutable_reward_fn();
  ::std::string* release_reward_fn();
  void set_allocated_reward_fn(::std::string* reward_fn);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_reward_fn();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_reward_fn(
      ::std::string* reward_fn);

  // int32 start_phase_ix = 9;
  void clear_start_phase_ix();
  static const int kStartPhaseIxFieldNumber = 9;
  ::google::protobuf::int32 start_phase_ix() const;
  void set_start_phase_ix(::google::protobuf::int32 value);

  // bool is_partial_game = 12;
  void clear_is_partial_game();
  static const int kIsPartialGameFieldNumber = 12;
  bool is_partial_game() const;
  void set_is_partial_game(bool value);

  // @@protoc_insertion_point(class_scope:diplomacy_proto.SavedGame)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rules_;
  ::google::protobuf::RepeatedPtrField< ::diplomacy_proto::PhaseHistory > phases_;
  ::google::protobuf::RepeatedPtrField< ::std::string> assigned_powers_;
  ::google::protobuf::internal::MapField<
      SavedGame_RewardsEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::FloatList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > rewards_;
  ::google::protobuf::internal::MapField<
      SavedGame_KwargsEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > kwargs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> players_;
  ::google::protobuf::internal::MapField<
      SavedGame_ReturnsEntry_DoNotUse,
      ::std::string, ::diplomacy_proto::FloatList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > returns_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr map_;
  ::google::protobuf::internal::ArenaStringPtr done_reason_;
  ::google::protobuf::internal::ArenaStringPtr reward_fn_;
  ::google::protobuf::int32 start_phase_ix_;
  bool is_partial_game_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_diplomacy_5fproto_2fgame_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message

// string sender = 1;
inline void Message::clear_sender() {
  sender_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message::sender() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Message.sender)
  return sender_.Get();
}
inline void Message::set_sender(const ::std::string& value) {
  
  sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.Message.sender)
}
#if LANG_CXX11
inline void Message::set_sender(::std::string&& value) {
  
  sender_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.Message.sender)
}
#endif
inline void Message::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.Message.sender)
}
inline void Message::set_sender(const char* value,
    size_t size) {
  
  sender_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.Message.sender)
}
inline ::std::string* Message::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.Message.sender)
  return sender_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message::release_sender() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.Message.sender)
  
  return sender_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.Message.sender)
}
inline ::std::string* Message::unsafe_arena_release_sender() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.Message.sender)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return sender_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message::unsafe_arena_set_allocated_sender(
    ::std::string* sender) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      sender, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.Message.sender)
}

// string recipient = 2;
inline void Message::clear_recipient() {
  recipient_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message::recipient() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Message.recipient)
  return recipient_.Get();
}
inline void Message::set_recipient(const ::std::string& value) {
  
  recipient_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.Message.recipient)
}
#if LANG_CXX11
inline void Message::set_recipient(::std::string&& value) {
  
  recipient_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.Message.recipient)
}
#endif
inline void Message::set_recipient(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  recipient_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.Message.recipient)
}
inline void Message::set_recipient(const char* value,
    size_t size) {
  
  recipient_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.Message.recipient)
}
inline ::std::string* Message::mutable_recipient() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.Message.recipient)
  return recipient_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message::release_recipient() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.Message.recipient)
  
  return recipient_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message::set_allocated_recipient(::std::string* recipient) {
  if (recipient != NULL) {
    
  } else {
    
  }
  recipient_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.Message.recipient)
}
inline ::std::string* Message::unsafe_arena_release_recipient() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.Message.recipient)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return recipient_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message::unsafe_arena_set_allocated_recipient(
    ::std::string* recipient) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (recipient != NULL) {
    
  } else {
    
  }
  recipient_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      recipient, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.Message.recipient)
}

// int64 time_sent = 3;
inline void Message::clear_time_sent() {
  time_sent_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::time_sent() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Message.time_sent)
  return time_sent_;
}
inline void Message::set_time_sent(::google::protobuf::int64 value) {
  
  time_sent_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.Message.time_sent)
}

// string phase = 4;
inline void Message::clear_phase() {
  phase_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message::phase() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Message.phase)
  return phase_.Get();
}
inline void Message::set_phase(const ::std::string& value) {
  
  phase_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.Message.phase)
}
#if LANG_CXX11
inline void Message::set_phase(::std::string&& value) {
  
  phase_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.Message.phase)
}
#endif
inline void Message::set_phase(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phase_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.Message.phase)
}
inline void Message::set_phase(const char* value,
    size_t size) {
  
  phase_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.Message.phase)
}
inline ::std::string* Message::mutable_phase() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.Message.phase)
  return phase_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message::release_phase() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.Message.phase)
  
  return phase_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message::set_allocated_phase(::std::string* phase) {
  if (phase != NULL) {
    
  } else {
    
  }
  phase_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phase,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.Message.phase)
}
inline ::std::string* Message::unsafe_arena_release_phase() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.Message.phase)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return phase_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message::unsafe_arena_set_allocated_phase(
    ::std::string* phase) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (phase != NULL) {
    
  } else {
    
  }
  phase_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      phase, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.Message.phase)
}

// string message = 5;
inline void Message::clear_message() {
  message_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Message::message() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Message.message)
  return message_.Get();
}
inline void Message::set_message(const ::std::string& value) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.Message.message)
}
#if LANG_CXX11
inline void Message::set_message(::std::string&& value) {
  
  message_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.Message.message)
}
#endif
inline void Message::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.Message.message)
}
inline void Message::set_message(const char* value,
    size_t size) {
  
  message_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.Message.message)
}
inline ::std::string* Message::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.Message.message)
  return message_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Message::release_message() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.Message.message)
  
  return message_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Message::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.Message.message)
}
inline ::std::string* Message::unsafe_arena_release_message() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.Message.message)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return message_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Message::unsafe_arena_set_allocated_message(
    ::std::string* message) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (message != NULL) {
    
  } else {
    
  }
  message_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      message, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.Message.message)
}

// repeated uint32 tokens = 6 [packed = true];
inline int Message::tokens_size() const {
  return tokens_.size();
}
inline void Message::clear_tokens() {
  tokens_.Clear();
}
inline ::google::protobuf::uint32 Message::tokens(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.Message.tokens)
  return tokens_.Get(index);
}
inline void Message::set_tokens(int index, ::google::protobuf::uint32 value) {
  tokens_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.Message.tokens)
}
inline void Message::add_tokens(::google::protobuf::uint32 value) {
  tokens_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.Message.tokens)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Message::tokens() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.Message.tokens)
  return tokens_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Message::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.Message.tokens)
  return &tokens_;
}

// -------------------------------------------------------------------

// State_Builds

// int32 count = 1;
inline void State_Builds::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 State_Builds::count() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.Builds.count)
  return count_;
}
inline void State_Builds::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.Builds.count)
}

// repeated string homes = 2;
inline int State_Builds::homes_size() const {
  return homes_.size();
}
inline void State_Builds::clear_homes() {
  homes_.Clear();
}
inline const ::std::string& State_Builds::homes(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.Builds.homes)
  return homes_.Get(index);
}
inline ::std::string* State_Builds::mutable_homes(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.Builds.homes)
  return homes_.Mutable(index);
}
inline void State_Builds::set_homes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.Builds.homes)
  homes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void State_Builds::set_homes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.Builds.homes)
  homes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void State_Builds::set_homes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  homes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.Builds.homes)
}
inline void State_Builds::set_homes(int index, const char* value, size_t size) {
  homes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.Builds.homes)
}
inline ::std::string* State_Builds::add_homes() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.State.Builds.homes)
  return homes_.Add();
}
inline void State_Builds::add_homes(const ::std::string& value) {
  homes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.State.Builds.homes)
}
#if LANG_CXX11
inline void State_Builds::add_homes(::std::string&& value) {
  homes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.State.Builds.homes)
}
#endif
inline void State_Builds::add_homes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  homes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.State.Builds.homes)
}
inline void State_Builds::add_homes(const char* value, size_t size) {
  homes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.State.Builds.homes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
State_Builds::homes() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.State.Builds.homes)
  return homes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
State_Builds::mutable_homes() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.State.Builds.homes)
  return &homes_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// State

// string game_id = 1;
inline void State::clear_game_id() {
  game_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& State::game_id() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.game_id)
  return game_id_.Get();
}
inline void State::set_game_id(const ::std::string& value) {
  
  game_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.game_id)
}
#if LANG_CXX11
inline void State::set_game_id(::std::string&& value) {
  
  game_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.State.game_id)
}
#endif
inline void State::set_game_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.game_id)
}
inline void State::set_game_id(const char* value,
    size_t size) {
  
  game_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.game_id)
}
inline ::std::string* State::mutable_game_id() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.game_id)
  return game_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* State::release_game_id() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.State.game_id)
  
  return game_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void State::set_allocated_game_id(::std::string* game_id) {
  if (game_id != NULL) {
    
  } else {
    
  }
  game_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.State.game_id)
}
inline ::std::string* State::unsafe_arena_release_game_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.State.game_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return game_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void State::unsafe_arena_set_allocated_game_id(
    ::std::string* game_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (game_id != NULL) {
    
  } else {
    
  }
  game_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      game_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.State.game_id)
}

// string name = 2;
inline void State::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& State::name() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.name)
  return name_.Get();
}
inline void State::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.name)
}
#if LANG_CXX11
inline void State::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.State.name)
}
#endif
inline void State::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.name)
}
inline void State::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.name)
}
inline ::std::string* State::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* State::release_name() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.State.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void State::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.State.name)
}
inline ::std::string* State::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.State.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void State::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.State.name)
}

// string map = 3;
inline void State::clear_map() {
  map_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& State::map() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.map)
  return map_.Get();
}
inline void State::set_map(const ::std::string& value) {
  
  map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.map)
}
#if LANG_CXX11
inline void State::set_map(::std::string&& value) {
  
  map_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.State.map)
}
#endif
inline void State::set_map(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.map)
}
inline void State::set_map(const char* value,
    size_t size) {
  
  map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.map)
}
inline ::std::string* State::mutable_map() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.map)
  return map_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* State::release_map() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.State.map)
  
  return map_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void State::set_allocated_map(::std::string* map) {
  if (map != NULL) {
    
  } else {
    
  }
  map_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.State.map)
}
inline ::std::string* State::unsafe_arena_release_map() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.State.map)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return map_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void State::unsafe_arena_set_allocated_map(
    ::std::string* map) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (map != NULL) {
    
  } else {
    
  }
  map_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      map, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.State.map)
}

// string zobrist_hash = 13;
inline void State::clear_zobrist_hash() {
  zobrist_hash_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& State::zobrist_hash() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.zobrist_hash)
  return zobrist_hash_.Get();
}
inline void State::set_zobrist_hash(const ::std::string& value) {
  
  zobrist_hash_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.zobrist_hash)
}
#if LANG_CXX11
inline void State::set_zobrist_hash(::std::string&& value) {
  
  zobrist_hash_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.State.zobrist_hash)
}
#endif
inline void State::set_zobrist_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  zobrist_hash_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.zobrist_hash)
}
inline void State::set_zobrist_hash(const char* value,
    size_t size) {
  
  zobrist_hash_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.zobrist_hash)
}
inline ::std::string* State::mutable_zobrist_hash() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.zobrist_hash)
  return zobrist_hash_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* State::release_zobrist_hash() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.State.zobrist_hash)
  
  return zobrist_hash_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void State::set_allocated_zobrist_hash(::std::string* zobrist_hash) {
  if (zobrist_hash != NULL) {
    
  } else {
    
  }
  zobrist_hash_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zobrist_hash,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.State.zobrist_hash)
}
inline ::std::string* State::unsafe_arena_release_zobrist_hash() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.State.zobrist_hash)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return zobrist_hash_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void State::unsafe_arena_set_allocated_zobrist_hash(
    ::std::string* zobrist_hash) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (zobrist_hash != NULL) {
    
  } else {
    
  }
  zobrist_hash_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      zobrist_hash, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.State.zobrist_hash)
}

// repeated string rules = 4;
inline int State::rules_size() const {
  return rules_.size();
}
inline void State::clear_rules() {
  rules_.Clear();
}
inline const ::std::string& State::rules(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.rules)
  return rules_.Get(index);
}
inline ::std::string* State::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.rules)
  return rules_.Mutable(index);
}
inline void State::set_rules(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.rules)
  rules_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void State::set_rules(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.rules)
  rules_.Mutable(index)->assign(std::move(value));
}
#endif
inline void State::set_rules(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  rules_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.rules)
}
inline void State::set_rules(int index, const char* value, size_t size) {
  rules_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.rules)
}
inline ::std::string* State::add_rules() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.State.rules)
  return rules_.Add();
}
inline void State::add_rules(const ::std::string& value) {
  rules_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.State.rules)
}
#if LANG_CXX11
inline void State::add_rules(::std::string&& value) {
  rules_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.State.rules)
}
#endif
inline void State::add_rules(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  rules_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.State.rules)
}
inline void State::add_rules(const char* value, size_t size) {
  rules_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.State.rules)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
State::rules() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.State.rules)
  return rules_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
State::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.State.rules)
  return &rules_;
}

// map<string, .diplomacy_proto.StringList> units = 5;
inline int State::units_size() const {
  return units_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
State::units() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.State.units)
  return units_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
State::mutable_units() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.State.units)
  return units_.MutableMap();
}

// map<string, .diplomacy_proto.StringList> centers = 6;
inline int State::centers_size() const {
  return centers_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
State::centers() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.State.centers)
  return centers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
State::mutable_centers() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.State.centers)
  return centers_.MutableMap();
}

// map<string, .diplomacy_proto.StringList> homes = 7;
inline int State::homes_size() const {
  return homes_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
State::homes() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.State.homes)
  return homes_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
State::mutable_homes() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.State.homes)
  return homes_.MutableMap();
}

// map<string, .diplomacy_proto.StringList> influence = 8;
inline int State::influence_size() const {
  return influence_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
State::influence() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.State.influence)
  return influence_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
State::mutable_influence() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.State.influence)
  return influence_.MutableMap();
}

// map<string, int32> civil_disorder = 9;
inline int State::civil_disorder_size() const {
  return civil_disorder_.size();
}
inline void State::clear_civil_disorder() {
  civil_disorder_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
State::civil_disorder() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.State.civil_disorder)
  return civil_disorder_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
State::mutable_civil_disorder() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.State.civil_disorder)
  return civil_disorder_.MutableMap();
}

// map<string, .diplomacy_proto.State.Builds> builds = 10;
inline int State::builds_size() const {
  return builds_.size();
}
inline void State::clear_builds() {
  builds_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::State_Builds >&
State::builds() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.State.builds)
  return builds_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::State_Builds >*
State::mutable_builds() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.State.builds)
  return builds_.MutableMap();
}

// string note = 11;
inline void State::clear_note() {
  note_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& State::note() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.note)
  return note_.Get();
}
inline void State::set_note(const ::std::string& value) {
  
  note_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.note)
}
#if LANG_CXX11
inline void State::set_note(::std::string&& value) {
  
  note_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.State.note)
}
#endif
inline void State::set_note(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  note_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.State.note)
}
inline void State::set_note(const char* value,
    size_t size) {
  
  note_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.State.note)
}
inline ::std::string* State::mutable_note() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.State.note)
  return note_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* State::release_note() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.State.note)
  
  return note_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void State::set_allocated_note(::std::string* note) {
  if (note != NULL) {
    
  } else {
    
  }
  note_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), note,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.State.note)
}
inline ::std::string* State::unsafe_arena_release_note() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.State.note)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return note_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void State::unsafe_arena_set_allocated_note(
    ::std::string* note) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (note != NULL) {
    
  } else {
    
  }
  note_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      note, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.State.note)
}

// repeated uint32 board_state = 12 [packed = true];
inline int State::board_state_size() const {
  return board_state_.size();
}
inline void State::clear_board_state() {
  board_state_.Clear();
}
inline ::google::protobuf::uint32 State::board_state(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.State.board_state)
  return board_state_.Get(index);
}
inline void State::set_board_state(int index, ::google::protobuf::uint32 value) {
  board_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.State.board_state)
}
inline void State::add_board_state(::google::protobuf::uint32 value) {
  board_state_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.State.board_state)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
State::board_state() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.State.board_state)
  return board_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
State::mutable_board_state() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.State.board_state)
  return &board_state_;
}

// -------------------------------------------------------------------

// PhaseHistory_PolicyDetails

// repeated string locs = 1;
inline int PhaseHistory_PolicyDetails::locs_size() const {
  return locs_.size();
}
inline void PhaseHistory_PolicyDetails::clear_locs() {
  locs_.Clear();
}
inline const ::std::string& PhaseHistory_PolicyDetails::locs(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  return locs_.Get(index);
}
inline ::std::string* PhaseHistory_PolicyDetails::mutable_locs(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  return locs_.Mutable(index);
}
inline void PhaseHistory_PolicyDetails::set_locs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  locs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PhaseHistory_PolicyDetails::set_locs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  locs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PhaseHistory_PolicyDetails::set_locs(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  locs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
}
inline void PhaseHistory_PolicyDetails::set_locs(int index, const char* value, size_t size) {
  locs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
}
inline ::std::string* PhaseHistory_PolicyDetails::add_locs() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  return locs_.Add();
}
inline void PhaseHistory_PolicyDetails::add_locs(const ::std::string& value) {
  locs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
}
#if LANG_CXX11
inline void PhaseHistory_PolicyDetails::add_locs(::std::string&& value) {
  locs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
}
#endif
inline void PhaseHistory_PolicyDetails::add_locs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  locs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
}
inline void PhaseHistory_PolicyDetails::add_locs(const char* value, size_t size) {
  locs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PhaseHistory_PolicyDetails::locs() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  return locs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PhaseHistory_PolicyDetails::mutable_locs() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.PhaseHistory.PolicyDetails.locs)
  return &locs_;
}

// repeated int32 tokens = 2;
inline int PhaseHistory_PolicyDetails::tokens_size() const {
  return tokens_.size();
}
inline void PhaseHistory_PolicyDetails::clear_tokens() {
  tokens_.Clear();
}
inline ::google::protobuf::int32 PhaseHistory_PolicyDetails::tokens(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.PolicyDetails.tokens)
  return tokens_.Get(index);
}
inline void PhaseHistory_PolicyDetails::set_tokens(int index, ::google::protobuf::int32 value) {
  tokens_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.PolicyDetails.tokens)
}
inline void PhaseHistory_PolicyDetails::add_tokens(::google::protobuf::int32 value) {
  tokens_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.PhaseHistory.PolicyDetails.tokens)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PhaseHistory_PolicyDetails::tokens() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.PhaseHistory.PolicyDetails.tokens)
  return tokens_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PhaseHistory_PolicyDetails::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.PhaseHistory.PolicyDetails.tokens)
  return &tokens_;
}

// repeated float log_probs = 3 [packed = true];
inline int PhaseHistory_PolicyDetails::log_probs_size() const {
  return log_probs_.size();
}
inline void PhaseHistory_PolicyDetails::clear_log_probs() {
  log_probs_.Clear();
}
inline float PhaseHistory_PolicyDetails::log_probs(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.PolicyDetails.log_probs)
  return log_probs_.Get(index);
}
inline void PhaseHistory_PolicyDetails::set_log_probs(int index, float value) {
  log_probs_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.PolicyDetails.log_probs)
}
inline void PhaseHistory_PolicyDetails::add_log_probs(float value) {
  log_probs_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.PhaseHistory.PolicyDetails.log_probs)
}
inline const ::google::protobuf::RepeatedField< float >&
PhaseHistory_PolicyDetails::log_probs() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.PhaseHistory.PolicyDetails.log_probs)
  return log_probs_;
}
inline ::google::protobuf::RepeatedField< float >*
PhaseHistory_PolicyDetails::mutable_log_probs() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.PhaseHistory.PolicyDetails.log_probs)
  return &log_probs_;
}

// bool draw_action = 4;
inline void PhaseHistory_PolicyDetails::clear_draw_action() {
  draw_action_ = false;
}
inline bool PhaseHistory_PolicyDetails::draw_action() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.PolicyDetails.draw_action)
  return draw_action_;
}
inline void PhaseHistory_PolicyDetails::set_draw_action(bool value) {
  
  draw_action_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.PolicyDetails.draw_action)
}

// float draw_prob = 5;
inline void PhaseHistory_PolicyDetails::clear_draw_prob() {
  draw_prob_ = 0;
}
inline float PhaseHistory_PolicyDetails::draw_prob() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.PolicyDetails.draw_prob)
  return draw_prob_;
}
inline void PhaseHistory_PolicyDetails::set_draw_prob(float value) {
  
  draw_prob_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.PolicyDetails.draw_prob)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PhaseHistory

// string name = 1;
inline void PhaseHistory::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& PhaseHistory::name() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.name)
  return name_.Get();
}
inline void PhaseHistory::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.name)
}
#if LANG_CXX11
inline void PhaseHistory::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.PhaseHistory.name)
}
#endif
inline void PhaseHistory::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.PhaseHistory.name)
}
inline void PhaseHistory::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.PhaseHistory.name)
}
inline ::std::string* PhaseHistory::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.PhaseHistory.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* PhaseHistory::release_name() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.PhaseHistory.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void PhaseHistory::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.PhaseHistory.name)
}
inline ::std::string* PhaseHistory::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.PhaseHistory.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void PhaseHistory::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.PhaseHistory.name)
}

// .diplomacy_proto.State state = 2;
inline bool PhaseHistory::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void PhaseHistory::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::diplomacy_proto::State& PhaseHistory::_internal_state() const {
  return *state_;
}
inline const ::diplomacy_proto::State& PhaseHistory::state() const {
  const ::diplomacy_proto::State* p = state_;
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.state)
  return p != NULL ? *p : *reinterpret_cast<const ::diplomacy_proto::State*>(
      &::diplomacy_proto::_State_default_instance_);
}
inline ::diplomacy_proto::State* PhaseHistory::release_state() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.PhaseHistory.state)
  
  ::diplomacy_proto::State* temp = state_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  state_ = NULL;
  return temp;
}
inline ::diplomacy_proto::State* PhaseHistory::unsafe_arena_release_state() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.PhaseHistory.state)
  
  ::diplomacy_proto::State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::diplomacy_proto::State* PhaseHistory::mutable_state() {
  
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::diplomacy_proto::State>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.PhaseHistory.state)
  return state_;
}
inline void PhaseHistory::set_allocated_state(::diplomacy_proto::State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(state);
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.PhaseHistory.state)
}

// map<string, .diplomacy_proto.StringList> orders = 3;
inline int PhaseHistory::orders_size() const {
  return orders_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
PhaseHistory::orders() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.PhaseHistory.orders)
  return orders_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
PhaseHistory::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.PhaseHistory.orders)
  return orders_.MutableMap();
}

// map<string, .diplomacy_proto.StringList> results = 4;
inline int PhaseHistory::results_size() const {
  return results_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
PhaseHistory::results() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.PhaseHistory.results)
  return results_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
PhaseHistory::mutable_results() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.PhaseHistory.results)
  return results_.MutableMap();
}

// map<string, .diplomacy_proto.PhaseHistory.PolicyDetails> policy = 6;
inline int PhaseHistory::policy_size() const {
  return policy_.size();
}
inline void PhaseHistory::clear_policy() {
  policy_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails >&
PhaseHistory::policy() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.PhaseHistory.policy)
  return policy_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::PhaseHistory_PolicyDetails >*
PhaseHistory::mutable_policy() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.PhaseHistory.policy)
  return policy_.MutableMap();
}

// repeated uint32 prev_orders_state = 8 [packed = true];
inline int PhaseHistory::prev_orders_state_size() const {
  return prev_orders_state_.size();
}
inline void PhaseHistory::clear_prev_orders_state() {
  prev_orders_state_.Clear();
}
inline ::google::protobuf::uint32 PhaseHistory::prev_orders_state(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.prev_orders_state)
  return prev_orders_state_.Get(index);
}
inline void PhaseHistory::set_prev_orders_state(int index, ::google::protobuf::uint32 value) {
  prev_orders_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.prev_orders_state)
}
inline void PhaseHistory::add_prev_orders_state(::google::protobuf::uint32 value) {
  prev_orders_state_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.PhaseHistory.prev_orders_state)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PhaseHistory::prev_orders_state() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.PhaseHistory.prev_orders_state)
  return prev_orders_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PhaseHistory::mutable_prev_orders_state() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.PhaseHistory.prev_orders_state)
  return &prev_orders_state_;
}

// repeated uint32 future_orders_state = 10 [packed = true];
inline int PhaseHistory::future_orders_state_size() const {
  return future_orders_state_.size();
}
inline void PhaseHistory::clear_future_orders_state() {
  future_orders_state_.Clear();
}
inline ::google::protobuf::uint32 PhaseHistory::future_orders_state(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.PhaseHistory.future_orders_state)
  return future_orders_state_.Get(index);
}
inline void PhaseHistory::set_future_orders_state(int index, ::google::protobuf::uint32 value) {
  future_orders_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:diplomacy_proto.PhaseHistory.future_orders_state)
}
inline void PhaseHistory::add_future_orders_state(::google::protobuf::uint32 value) {
  future_orders_state_.Add(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.PhaseHistory.future_orders_state)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PhaseHistory::future_orders_state() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.PhaseHistory.future_orders_state)
  return future_orders_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PhaseHistory::mutable_future_orders_state() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.PhaseHistory.future_orders_state)
  return &future_orders_state_;
}

// map<string, float> state_value = 9;
inline int PhaseHistory::state_value_size() const {
  return state_value_.size();
}
inline void PhaseHistory::clear_state_value() {
  state_value_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, float >&
PhaseHistory::state_value() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.PhaseHistory.state_value)
  return state_value_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, float >*
PhaseHistory::mutable_state_value() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.PhaseHistory.state_value)
  return state_value_.MutableMap();
}

// map<string, .diplomacy_proto.StringList> possible_orders = 7;
inline int PhaseHistory::possible_orders_size() const {
  return possible_orders_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >&
PhaseHistory::possible_orders() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.PhaseHistory.possible_orders)
  return possible_orders_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::StringList >*
PhaseHistory::mutable_possible_orders() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.PhaseHistory.possible_orders)
  return possible_orders_.MutableMap();
}

// -------------------------------------------------------------------

// SavedGame_KeywordArgs

// int32 player_seed = 1;
inline void SavedGame_KeywordArgs::clear_player_seed() {
  player_seed_ = 0;
}
inline ::google::protobuf::int32 SavedGame_KeywordArgs::player_seed() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.KeywordArgs.player_seed)
  return player_seed_;
}
inline void SavedGame_KeywordArgs::set_player_seed(::google::protobuf::int32 value) {
  
  player_seed_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.KeywordArgs.player_seed)
}

// float noise = 2;
inline void SavedGame_KeywordArgs::clear_noise() {
  noise_ = 0;
}
inline float SavedGame_KeywordArgs::noise() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.KeywordArgs.noise)
  return noise_;
}
inline void SavedGame_KeywordArgs::set_noise(float value) {
  
  noise_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.KeywordArgs.noise)
}

// float temperature = 3;
inline void SavedGame_KeywordArgs::clear_temperature() {
  temperature_ = 0;
}
inline float SavedGame_KeywordArgs::temperature() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.KeywordArgs.temperature)
  return temperature_;
}
inline void SavedGame_KeywordArgs::set_temperature(float value) {
  
  temperature_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.KeywordArgs.temperature)
}

// float dropout_rate = 5;
inline void SavedGame_KeywordArgs::clear_dropout_rate() {
  dropout_rate_ = 0;
}
inline float SavedGame_KeywordArgs::dropout_rate() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.KeywordArgs.dropout_rate)
  return dropout_rate_;
}
inline void SavedGame_KeywordArgs::set_dropout_rate(float value) {
  
  dropout_rate_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.KeywordArgs.dropout_rate)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SavedGame

// string id = 1;
inline void SavedGame::clear_id() {
  id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SavedGame::id() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.id)
  return id_.Get();
}
inline void SavedGame::set_id(const ::std::string& value) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.id)
}
#if LANG_CXX11
inline void SavedGame::set_id(::std::string&& value) {
  
  id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.SavedGame.id)
}
#endif
inline void SavedGame::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.id)
}
inline void SavedGame::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.id)
}
inline ::std::string* SavedGame::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.id)
  return id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SavedGame::release_id() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.SavedGame.id)
  
  return id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SavedGame::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.SavedGame.id)
}
inline ::std::string* SavedGame::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.SavedGame.id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SavedGame::unsafe_arena_set_allocated_id(
    ::std::string* id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (id != NULL) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.SavedGame.id)
}

// string map = 2;
inline void SavedGame::clear_map() {
  map_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SavedGame::map() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.map)
  return map_.Get();
}
inline void SavedGame::set_map(const ::std::string& value) {
  
  map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.map)
}
#if LANG_CXX11
inline void SavedGame::set_map(::std::string&& value) {
  
  map_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.SavedGame.map)
}
#endif
inline void SavedGame::set_map(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.map)
}
inline void SavedGame::set_map(const char* value,
    size_t size) {
  
  map_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.map)
}
inline ::std::string* SavedGame::mutable_map() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.map)
  return map_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SavedGame::release_map() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.SavedGame.map)
  
  return map_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SavedGame::set_allocated_map(::std::string* map) {
  if (map != NULL) {
    
  } else {
    
  }
  map_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.SavedGame.map)
}
inline ::std::string* SavedGame::unsafe_arena_release_map() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.SavedGame.map)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return map_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SavedGame::unsafe_arena_set_allocated_map(
    ::std::string* map) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (map != NULL) {
    
  } else {
    
  }
  map_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      map, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.SavedGame.map)
}

// repeated string rules = 3;
inline int SavedGame::rules_size() const {
  return rules_.size();
}
inline void SavedGame::clear_rules() {
  rules_.Clear();
}
inline const ::std::string& SavedGame::rules(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.rules)
  return rules_.Get(index);
}
inline ::std::string* SavedGame::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.rules)
  return rules_.Mutable(index);
}
inline void SavedGame::set_rules(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.rules)
  rules_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SavedGame::set_rules(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.rules)
  rules_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SavedGame::set_rules(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  rules_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.rules)
}
inline void SavedGame::set_rules(int index, const char* value, size_t size) {
  rules_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.rules)
}
inline ::std::string* SavedGame::add_rules() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.SavedGame.rules)
  return rules_.Add();
}
inline void SavedGame::add_rules(const ::std::string& value) {
  rules_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.rules)
}
#if LANG_CXX11
inline void SavedGame::add_rules(::std::string&& value) {
  rules_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.rules)
}
#endif
inline void SavedGame::add_rules(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  rules_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.SavedGame.rules)
}
inline void SavedGame::add_rules(const char* value, size_t size) {
  rules_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.SavedGame.rules)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SavedGame::rules() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.SavedGame.rules)
  return rules_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SavedGame::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.SavedGame.rules)
  return &rules_;
}

// repeated .diplomacy_proto.PhaseHistory phases = 4;
inline int SavedGame::phases_size() const {
  return phases_.size();
}
inline void SavedGame::clear_phases() {
  phases_.Clear();
}
inline ::diplomacy_proto::PhaseHistory* SavedGame::mutable_phases(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.phases)
  return phases_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::diplomacy_proto::PhaseHistory >*
SavedGame::mutable_phases() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.SavedGame.phases)
  return &phases_;
}
inline const ::diplomacy_proto::PhaseHistory& SavedGame::phases(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.phases)
  return phases_.Get(index);
}
inline ::diplomacy_proto::PhaseHistory* SavedGame::add_phases() {
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.phases)
  return phases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::diplomacy_proto::PhaseHistory >&
SavedGame::phases() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.SavedGame.phases)
  return phases_;
}

// string done_reason = 6;
inline void SavedGame::clear_done_reason() {
  done_reason_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SavedGame::done_reason() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.done_reason)
  return done_reason_.Get();
}
inline void SavedGame::set_done_reason(const ::std::string& value) {
  
  done_reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.done_reason)
}
#if LANG_CXX11
inline void SavedGame::set_done_reason(::std::string&& value) {
  
  done_reason_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.SavedGame.done_reason)
}
#endif
inline void SavedGame::set_done_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  done_reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.done_reason)
}
inline void SavedGame::set_done_reason(const char* value,
    size_t size) {
  
  done_reason_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.done_reason)
}
inline ::std::string* SavedGame::mutable_done_reason() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.done_reason)
  return done_reason_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SavedGame::release_done_reason() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.SavedGame.done_reason)
  
  return done_reason_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SavedGame::set_allocated_done_reason(::std::string* done_reason) {
  if (done_reason != NULL) {
    
  } else {
    
  }
  done_reason_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), done_reason,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.SavedGame.done_reason)
}
inline ::std::string* SavedGame::unsafe_arena_release_done_reason() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.SavedGame.done_reason)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return done_reason_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SavedGame::unsafe_arena_set_allocated_done_reason(
    ::std::string* done_reason) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (done_reason != NULL) {
    
  } else {
    
  }
  done_reason_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      done_reason, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.SavedGame.done_reason)
}

// repeated string assigned_powers = 5;
inline int SavedGame::assigned_powers_size() const {
  return assigned_powers_.size();
}
inline void SavedGame::clear_assigned_powers() {
  assigned_powers_.Clear();
}
inline const ::std::string& SavedGame::assigned_powers(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.assigned_powers)
  return assigned_powers_.Get(index);
}
inline ::std::string* SavedGame::mutable_assigned_powers(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.assigned_powers)
  return assigned_powers_.Mutable(index);
}
inline void SavedGame::set_assigned_powers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.assigned_powers)
  assigned_powers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SavedGame::set_assigned_powers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.assigned_powers)
  assigned_powers_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SavedGame::set_assigned_powers(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  assigned_powers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.assigned_powers)
}
inline void SavedGame::set_assigned_powers(int index, const char* value, size_t size) {
  assigned_powers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.assigned_powers)
}
inline ::std::string* SavedGame::add_assigned_powers() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.SavedGame.assigned_powers)
  return assigned_powers_.Add();
}
inline void SavedGame::add_assigned_powers(const ::std::string& value) {
  assigned_powers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.assigned_powers)
}
#if LANG_CXX11
inline void SavedGame::add_assigned_powers(::std::string&& value) {
  assigned_powers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.assigned_powers)
}
#endif
inline void SavedGame::add_assigned_powers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  assigned_powers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.SavedGame.assigned_powers)
}
inline void SavedGame::add_assigned_powers(const char* value, size_t size) {
  assigned_powers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.SavedGame.assigned_powers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SavedGame::assigned_powers() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.SavedGame.assigned_powers)
  return assigned_powers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SavedGame::mutable_assigned_powers() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.SavedGame.assigned_powers)
  return &assigned_powers_;
}

// repeated string players = 11;
inline int SavedGame::players_size() const {
  return players_.size();
}
inline void SavedGame::clear_players() {
  players_.Clear();
}
inline const ::std::string& SavedGame::players(int index) const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.players)
  return players_.Get(index);
}
inline ::std::string* SavedGame::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.players)
  return players_.Mutable(index);
}
inline void SavedGame::set_players(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.players)
  players_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SavedGame::set_players(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.players)
  players_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SavedGame::set_players(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  players_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.players)
}
inline void SavedGame::set_players(int index, const char* value, size_t size) {
  players_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.players)
}
inline ::std::string* SavedGame::add_players() {
  // @@protoc_insertion_point(field_add_mutable:diplomacy_proto.SavedGame.players)
  return players_.Add();
}
inline void SavedGame::add_players(const ::std::string& value) {
  players_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.players)
}
#if LANG_CXX11
inline void SavedGame::add_players(::std::string&& value) {
  players_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:diplomacy_proto.SavedGame.players)
}
#endif
inline void SavedGame::add_players(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  players_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:diplomacy_proto.SavedGame.players)
}
inline void SavedGame::add_players(const char* value, size_t size) {
  players_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:diplomacy_proto.SavedGame.players)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SavedGame::players() const {
  // @@protoc_insertion_point(field_list:diplomacy_proto.SavedGame.players)
  return players_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SavedGame::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:diplomacy_proto.SavedGame.players)
  return &players_;
}

// map<string, .diplomacy_proto.SavedGame.KeywordArgs> kwargs = 10;
inline int SavedGame::kwargs_size() const {
  return kwargs_.size();
}
inline void SavedGame::clear_kwargs() {
  kwargs_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs >&
SavedGame::kwargs() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.SavedGame.kwargs)
  return kwargs_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::SavedGame_KeywordArgs >*
SavedGame::mutable_kwargs() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.SavedGame.kwargs)
  return kwargs_.MutableMap();
}

// bool is_partial_game = 12;
inline void SavedGame::clear_is_partial_game() {
  is_partial_game_ = false;
}
inline bool SavedGame::is_partial_game() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.is_partial_game)
  return is_partial_game_;
}
inline void SavedGame::set_is_partial_game(bool value) {
  
  is_partial_game_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.is_partial_game)
}

// int32 start_phase_ix = 9;
inline void SavedGame::clear_start_phase_ix() {
  start_phase_ix_ = 0;
}
inline ::google::protobuf::int32 SavedGame::start_phase_ix() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.start_phase_ix)
  return start_phase_ix_;
}
inline void SavedGame::set_start_phase_ix(::google::protobuf::int32 value) {
  
  start_phase_ix_ = value;
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.start_phase_ix)
}

// string reward_fn = 7;
inline void SavedGame::clear_reward_fn() {
  reward_fn_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& SavedGame::reward_fn() const {
  // @@protoc_insertion_point(field_get:diplomacy_proto.SavedGame.reward_fn)
  return reward_fn_.Get();
}
inline void SavedGame::set_reward_fn(const ::std::string& value) {
  
  reward_fn_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:diplomacy_proto.SavedGame.reward_fn)
}
#if LANG_CXX11
inline void SavedGame::set_reward_fn(::std::string&& value) {
  
  reward_fn_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:diplomacy_proto.SavedGame.reward_fn)
}
#endif
inline void SavedGame::set_reward_fn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reward_fn_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:diplomacy_proto.SavedGame.reward_fn)
}
inline void SavedGame::set_reward_fn(const char* value,
    size_t size) {
  
  reward_fn_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:diplomacy_proto.SavedGame.reward_fn)
}
inline ::std::string* SavedGame::mutable_reward_fn() {
  
  // @@protoc_insertion_point(field_mutable:diplomacy_proto.SavedGame.reward_fn)
  return reward_fn_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* SavedGame::release_reward_fn() {
  // @@protoc_insertion_point(field_release:diplomacy_proto.SavedGame.reward_fn)
  
  return reward_fn_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SavedGame::set_allocated_reward_fn(::std::string* reward_fn) {
  if (reward_fn != NULL) {
    
  } else {
    
  }
  reward_fn_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward_fn,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:diplomacy_proto.SavedGame.reward_fn)
}
inline ::std::string* SavedGame::unsafe_arena_release_reward_fn() {
  // @@protoc_insertion_point(field_unsafe_arena_release:diplomacy_proto.SavedGame.reward_fn)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return reward_fn_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SavedGame::unsafe_arena_set_allocated_reward_fn(
    ::std::string* reward_fn) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (reward_fn != NULL) {
    
  } else {
    
  }
  reward_fn_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      reward_fn, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:diplomacy_proto.SavedGame.reward_fn)
}

// map<string, .diplomacy_proto.FloatList> rewards = 8;
inline int SavedGame::rewards_size() const {
  return rewards_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >&
SavedGame::rewards() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.SavedGame.rewards)
  return rewards_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >*
SavedGame::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.SavedGame.rewards)
  return rewards_.MutableMap();
}

// map<string, .diplomacy_proto.FloatList> returns = 13;
inline int SavedGame::returns_size() const {
  return returns_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >&
SavedGame::returns() const {
  // @@protoc_insertion_point(field_map:diplomacy_proto.SavedGame.returns)
  return returns_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::diplomacy_proto::FloatList >*
SavedGame::mutable_returns() {
  // @@protoc_insertion_point(field_mutable_map:diplomacy_proto.SavedGame.returns)
  return returns_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace diplomacy_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_diplomacy_5fproto_2fgame_2eproto
